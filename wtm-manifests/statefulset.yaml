---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: wtm
  name: statefulset-postgresql-wtm
  labels:
    app.kubernetes.io/name: postgresql-wtm
spec:
  selector:
    matchLabels:
       app.kubernetes.io/name: postgresql-wtm
  serviceName: service-int-postgres-wtm
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql-wtm
    spec:
      containers:
      - name: postgresql-wtm
        image: postgres:12.7-alpine
        env:
          - name: PGDATA
            value: "/home/postgres/data"
          - name: APP_DB_NAME
            valueFrom:
              secretKeyRef:
                name: app-db-name
                key: name
          - name: APP_DB_USER
            valueFrom:
              secretKeyRef:
                name: app-db-user
                key: user
          - name: APP_DB_PASS
            valueFrom:
              secretKeyRef:
                name: app-db-pass
                key: password
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-user
                key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-pass
                key: password
        resources:
          limits:
            cpu: 300m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 300Mi
        ports:
        - containerPort: 5432
          name: client
        readinessProbe:
          exec:
            command: 
            - bash 
            - "-c"
            - |
              pg_isready -U $POSTGRES_USER -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - bash 
            - "-c"
            - |
              pg_isready -U $POSTGRES_USER -h 127.0.0.1 -p 5432
          initialDelaySeconds: 45
          timeoutSeconds: 5
        imagePullPolicy: Always
        volumeMounts:
        - name: postgres-data
          mountPath: /home/postgres/data
        - name: init-sh
          mountPath: /docker-entrypoint-initdb.d/01-init.sh
          subPath: 01-init.sh
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: pvc-wtm-01
        - name: init-sh
          configMap:
            name: cm-postgresql-init-wtm
      nodeSelector:
        kubernetes.io/os: linux